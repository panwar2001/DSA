#include<string>
#include<iostream>
#include<vector>
#include<set>
#include<utility>
#include<map>
template <class T >void _print(T t) {cerr << t;}

template <class T,class V> void _print(T *v,V n){cerr<<"[ ";for(T i=0;i<n;i++){_print(v[i]);cerr<<" "; }cerr<<"]"; }
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(unordered_map <T,V> v){cerr<<"[";for(auto i:v){_print(i); cerr << " ";} cerr << "]";}
#define debug(...) cerr<<#__VA_ARGS__[0]<<" ";_print(__VA_ARGS__);cerr<<endl;

#define fre()  freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);freopen("error.txt", "w", stderr);
